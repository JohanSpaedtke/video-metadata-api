<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://video-metadata.tv.se/tagging/v1" xmlns:common="http://video-metadata.tv.se/common/v1"
	targetNamespace="http://video-metadata.tv.se/tagging/v1" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0"
>
	<!-- imports -->
	<xs:import namespace="http://video-metadata.tv.se/common/v1" schemaLocation="common.xsd" />
	
	<!-- elements -->
	<xs:element name="tags" type="tagDefinitionListType" />
	<!-- types -->
	<xs:complexType name="tagDefinitionListType">
		<xs:annotation>
			<xs:documentation>unique id for the tag
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="tag" type="tagDefinitionType" minOccurs="0" maxOccurs="unbounded" />
		</xs:sequence>
	</xs:complexType>
	<!--  -->
	<xs:complexType name="tagDefinitionType">
		<xs:sequence>
			<xs:element name="id" type="common:idType">
				<xs:annotation>
					<xs:documentation>unique id for the tag
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="providerId" type="common:idType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Id of the source of the tag. ??? question how to solve the poblem of differentiating between different source tags.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="type" type="tagTypeType">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="description" type="common:description">
				<xs:annotation>
					<xs:documentation>Internal description of the tag, in the company language (english?)
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="tagValues">
				<xs:annotation>
					<xs:documentation>
					</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element name="tagText" type="tagValueType" minOccurs="1" maxOccurs="unbounded" />
					</xs:sequence>
				</xs:complexType>
			</xs:element>
		</xs:sequence>
		<xs:attribute name="created" type="xs:dateTime" use="required">
			<xs:annotation>
				<xs:documentation>Timestamp when document is created
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="deprecated" type="xs:dateTime">
			<xs:annotation>
				<xs:documentation>Timestamp when document is deprecated. Deprecation has the meaning that the tag should no longer be used to tag new content. It
					is not deleted as the tags may exist and be in use on already tagged content.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>
	<!--  -->
	<xs:simpleType name="tagTypeType">
		<xs:annotation>
			<xs:documentation>
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
<!-- 			<xs:enumeration value="program" /> ersätts av en program nid -->
<!-- 			<xs:enumeration value="person" /> ersätts av en participant -->
			<xs:enumeration value="subject" />
			<xs:enumeration value="other" />
		</xs:restriction>
	</xs:simpleType>
	<!--  -->
	<xs:simpleType name="tagTextType">
		<xs:restriction base="xs:string">
			<xs:pattern value="(\s*[^\s]\s*)+" />
		</xs:restriction>
	</xs:simpleType>
	<!--  -->
	<xs:complexType name="tagValueType">
		<xs:annotation>
			<xs:documentation>A general type for the tag, i.e. the textual representation. Language attribute can be used to specify a localized name for the
				tag. If more than one tag value is given without language attribute, or the same language attribute is repeated, then the selection order is
				undefined.
			</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="tagTextType">
				<xs:attribute name="language" type="xs:language">
					<xs:annotation>
						<xs:documentation>2 char ISO 639-1 language code</xs:documentation>
					</xs:annotation>
				</xs:attribute>
				<xs:attribute name="default" type="xs:boolean">
					<xs:annotation>
						<xs:documentation>Set to true for the standard tag.</xs:documentation>
					</xs:annotation>
				</xs:attribute>
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
</xs:schema>